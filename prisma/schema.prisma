// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RouteStatus {
  unassigned
  assigned
  in_progress
  completed
  cancelled
}

model Driver {
  id               String       @id @default(uuid())
  name             String
  licenseType      String
  availability     Boolean      @default(true)
  lastAssignedAt   DateTime?
  totalAssignments Int          @default(0)
  lat              Float?
  lng              Float?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  Assignment       Assignment[]

  @@index([availability])
  @@index([lastAssignedAt])
}

model Route {
  id              String       @id @default(uuid())
  startLocation   String
  endLocation     String
  distance        Float
  estimatedTime   Int
  requiredLicense String?
  startLat        Float?
  startLng        Float?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  status          RouteStatus  @default(unassigned)
  Assignment      Assignment[]

  @@index([createdAt])
  @@index([status])
}

model Assignment {
  id         String    @id @default(uuid())
  driver     Driver    @relation(fields: [driverId], references: [id])
  driverId   String
  route      Route     @relation(fields: [routeId], references: [id])
  routeId    String
  assignedAt DateTime  @default(now())
  finishedAt DateTime?

  @@index([driverId])
  @@index([routeId])
}
